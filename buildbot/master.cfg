# -*- python -*-
# ex: set syntax=python:

c = BuildmasterConfig = {}

####### BUILDSLAVES

# TODO we can't keep the REAL passwords in svn

c['bots'] = [("bot1name", "bot1passwd")]
c['slavePortnum'] = 9989

####### CHANGESOURCES

c['sources'] = [buildbot.changes.pb.PBChangeSource()]

####### SCHEDULERS

c['schedulers'] = []
c['schedulers'].append(buildbot.scheduler .Scheduler(
      name="quick", branch=None, treeStableTimer=60,
      builderNames=["buildbot-full"]))

####### BUILDERS

# TODO conf

# the 'builders' list defines the Builders. Each one is configured with a
# dictionary, using the following keys:
#  name (required): the name used to describe this bilder
#  slavename (required): which slave to use, must appear in c['bots']
#  builddir (required): which subdirectory to run the builder in
#  factory (required): a BuildFactory to define how the build is run
#  periodicBuildTime (optional): if set, force a build every N seconds

# buildbot/process/factory.py provides several BuildFactory classes you can
# start with, which implement build processes for common targets (GNU
# autoconf projects, CPAN perl modules, etc). The factory.BuildFactory is the
# base class, and is configured with a series of BuildSteps. When the build
# is run, the appropriate buildslave is told to execute each Step in turn.

# the first BuildStep is typically responsible for obtaining a copy of the
# sources. There are source-obtaining Steps in buildbot/process/step.py for
# CVS, SVN, and others.

cvsroot = ":pserver:anonymous@cvs.sourceforge.net:/cvsroot/buildbot"
cvsmodule = "buildbot"

builders = []

from buildbot.process import step, factory
f1 = factory.BuildFactory()
f1.addStep(step.CVS,
           cvsroot=cvsroot, cvsmodule=cvsmodule, login="",
           mode="copy")
f1.addStep(step.Compile, command=["./setup.py", "build"])
f1.addStep(step_twisted.Trial, testpath=".")

b1 = {'name': "buildbot-full",
      'slavename': "bot1name",
      'builddir': "full",
      'factory': f1,
      }
c['builders'] = [b1]

####### STATUS TARGETS

c['status'] = [buildbot.status.html.Waterfall(http_port=8010)]

# from buildbot.status import mail
# c['status'].append(mail.MailNotifier(fromaddr="buildbot@localhost",
#                                      extraRecipients=["builds@example.com"],
#                                      sendToInterestedUsers=False))
#
# from buildbot.status import words
# c['status'].append(words.IRC(host="irc.example.com", nick="bb",
#                              channels=["#example"]))
#
# from buildbot.status import client
# c['status'].append(client.PBListener(9988))

####### DEBUGGING OPTIONS

#c['debugPassword'] = "debugpassword"
#c['manhole'] = buildbot.manhole.PasswordManhole("tcp:9999:interface=127.0.0.1", "admin", "password")

####### PROJECT IDENTITY

c['projectName'] = "SpringLobby"
c['projectURL'] = "http://tc.serveftp.net/trac"
c['buildbotURL'] = "http://tc.serveftp.net:8010/"

